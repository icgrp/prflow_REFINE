// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module rasterization2_m_rasterization2_odd (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Input_1_TDATA,
        Input_1_TVALID,
        Input_1_TREADY,
        Output_1_TDATA,
        Output_1_TVALID,
        Output_1_TREADY,
        Output_2_TDATA,
        Output_2_TVALID,
        Output_2_TREADY
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_state7 = 8'd64;
parameter    ap_ST_fsm_state8 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] Input_1_TDATA;
input   Input_1_TVALID;
output   Input_1_TREADY;
output  [31:0] Output_1_TDATA;
output   Output_1_TVALID;
input   Output_1_TREADY;
output  [31:0] Output_2_TDATA;
output   Output_2_TVALID;
input   Output_2_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg Input_1_TREADY;
reg[31:0] Output_1_TDATA;
reg Output_1_TVALID;
reg[31:0] Output_2_TDATA;
reg Output_2_TVALID;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [8:0] fragment_x_V_address0;
reg    fragment_x_V_ce0;
reg    fragment_x_V_we0;
wire   [7:0] fragment_x_V_q0;
reg   [8:0] fragment_y_V_address0;
reg    fragment_y_V_ce0;
reg    fragment_y_V_we0;
wire   [7:0] fragment_y_V_q0;
reg   [8:0] fragment_z_V_address0;
reg    fragment_z_V_ce0;
reg    fragment_z_V_we0;
wire   [7:0] fragment_z_V_q0;
reg   [8:0] fragment_color_V_address0;
reg    fragment_color_V_ce0;
reg    fragment_color_V_we0;
wire   [5:0] fragment_color_V_q0;
reg    Input_1_TDATA_blk_n;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
reg    Output_1_TDATA_blk_n;
reg   [0:0] icmp_ln64_reg_307;
wire    ap_CS_fsm_state6;
reg    Output_2_TDATA_blk_n;
reg   [7:0] triangle_2d_same_x0_V_reg_289;
reg   [7:0] triangle_2d_same_y0_V_reg_295;
reg   [7:0] triangle_2d_same_x1_V_reg_301;
wire   [0:0] icmp_ln64_fu_172_p2;
wire   [7:0] triangle_2d_same_y1_V_fu_178_p1;
reg   [7:0] triangle_2d_same_y1_V_reg_311;
reg   [7:0] triangle_2d_same_x2_V_reg_317;
reg   [7:0] triangle_2d_same_y2_V_reg_323;
reg   [7:0] triangle_2d_same_z_V_reg_329;
wire   [15:0] max_index_V_fu_182_p1;
reg   [15:0] max_index_V_reg_334;
reg   [7:0] max_min_V_reg_339;
wire   [7:0] max_min_V_1_fu_186_p1;
reg   [7:0] max_min_V_1_reg_344;
reg   [7:0] max_min_V_2_reg_349;
wire   [8:0] ret_V_22_fu_197_p2;
reg   [8:0] ret_V_22_reg_354;
wire   [8:0] ret_V_25_fu_210_p2;
reg   [8:0] ret_V_25_reg_359;
wire   [8:0] ret_V_28_fu_220_p2;
reg   [8:0] ret_V_28_reg_364;
wire   [8:0] ret_V_31_fu_230_p2;
reg   [8:0] ret_V_31_reg_369;
wire   [8:0] ret_V_34_fu_237_p2;
reg   [8:0] ret_V_34_reg_374;
wire   [8:0] ret_V_37_fu_244_p2;
reg   [8:0] ret_V_37_reg_379;
wire    grp_rasterization2_odd_Pipeline_RAST2_fu_88_ap_start;
wire    grp_rasterization2_odd_Pipeline_RAST2_fu_88_ap_done;
wire    grp_rasterization2_odd_Pipeline_RAST2_fu_88_ap_idle;
wire    grp_rasterization2_odd_Pipeline_RAST2_fu_88_ap_ready;
wire   [15:0] grp_rasterization2_odd_Pipeline_RAST2_fu_88_i_bot_V_out;
wire    grp_rasterization2_odd_Pipeline_RAST2_fu_88_i_bot_V_out_ap_vld;
wire   [15:0] grp_rasterization2_odd_Pipeline_RAST2_fu_88_i_top_V_out;
wire    grp_rasterization2_odd_Pipeline_RAST2_fu_88_i_top_V_out_ap_vld;
wire   [15:0] grp_rasterization2_odd_Pipeline_RAST2_fu_88_i_V_out;
wire    grp_rasterization2_odd_Pipeline_RAST2_fu_88_i_V_out_ap_vld;
wire   [8:0] grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_x_V_address0;
wire    grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_x_V_ce0;
wire    grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_x_V_we0;
wire   [7:0] grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_x_V_d0;
wire   [8:0] grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_y_V_address0;
wire    grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_y_V_ce0;
wire    grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_y_V_we0;
wire   [7:0] grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_y_V_d0;
wire   [8:0] grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_z_V_address0;
wire    grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_z_V_ce0;
wire    grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_z_V_we0;
wire   [7:0] grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_z_V_d0;
wire   [8:0] grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_color_V_address0;
wire    grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_color_V_ce0;
wire    grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_color_V_we0;
wire   [5:0] grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_color_V_d0;
wire    grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_ap_start;
wire    grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_ap_done;
wire    grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_ap_idle;
wire    grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_ap_ready;
wire    grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_Output_2_TREADY;
wire    grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_Output_1_TREADY;
wire   [31:0] grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_Output_1_TDATA;
wire    grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_Output_1_TVALID;
wire   [31:0] grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_Output_2_TDATA;
wire    grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_Output_2_TVALID;
wire   [8:0] grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_fragment_x_V_address0;
wire    grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_fragment_x_V_ce0;
wire   [8:0] grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_fragment_y_V_address0;
wire    grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_fragment_y_V_ce0;
wire   [8:0] grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_fragment_z_V_address0;
wire    grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_fragment_z_V_ce0;
wire   [8:0] grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_fragment_color_V_address0;
wire    grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_fragment_color_V_ce0;
reg    grp_rasterization2_odd_Pipeline_RAST2_fu_88_ap_start_reg;
reg    ap_block_state4_ignore_call12;
reg    ap_block_state4_io;
wire    ap_CS_fsm_state5;
reg    grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_ap_start_reg;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
reg    ap_block_state1;
reg    ap_block_state4;
wire   [31:0] zext_ln232_fu_257_p1;
reg    ap_block_state6;
reg    ap_block_state6_io;
wire   [31:0] zext_ln232_1_fu_262_p1;
wire   [1:0] flag_V_fu_168_p1;
wire   [8:0] triangle_2d_same_y1_V_cast_fu_191_p1;
wire   [8:0] triangle_2d_same_y0_V_cast_fu_194_p1;
wire   [8:0] triangle_2d_same_x1_V_cast_fu_204_p1;
wire   [8:0] triangle_2d_same_x0_V_cast_fu_207_p1;
wire   [8:0] triangle_2d_same_y2_V_cast_fu_217_p1;
wire   [8:0] triangle_2d_same_x2_V_cast_fu_227_p1;
reg    ap_block_state8_on_subcall_done;
reg   [7:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 grp_rasterization2_odd_Pipeline_RAST2_fu_88_ap_start_reg = 1'b0;
#0 grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_ap_start_reg = 1'b0;
end

rasterization2_m_rasterization2_odd_fragment_x_V_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
fragment_x_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fragment_x_V_address0),
    .ce0(fragment_x_V_ce0),
    .we0(fragment_x_V_we0),
    .d0(grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_x_V_d0),
    .q0(fragment_x_V_q0)
);

rasterization2_m_rasterization2_odd_fragment_x_V_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
fragment_y_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fragment_y_V_address0),
    .ce0(fragment_y_V_ce0),
    .we0(fragment_y_V_we0),
    .d0(grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_y_V_d0),
    .q0(fragment_y_V_q0)
);

rasterization2_m_rasterization2_odd_fragment_x_V_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
fragment_z_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fragment_z_V_address0),
    .ce0(fragment_z_V_ce0),
    .we0(fragment_z_V_we0),
    .d0(grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_z_V_d0),
    .q0(fragment_z_V_q0)
);

rasterization2_m_rasterization2_odd_fragment_color_V_RAM_AUTO_1R1W #(
    .DataWidth( 6 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
fragment_color_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fragment_color_V_address0),
    .ce0(fragment_color_V_ce0),
    .we0(fragment_color_V_we0),
    .d0(grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_color_V_d0),
    .q0(fragment_color_V_q0)
);

rasterization2_m_rasterization2_odd_Pipeline_RAST2 grp_rasterization2_odd_Pipeline_RAST2_fu_88(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_rasterization2_odd_Pipeline_RAST2_fu_88_ap_start),
    .ap_done(grp_rasterization2_odd_Pipeline_RAST2_fu_88_ap_done),
    .ap_idle(grp_rasterization2_odd_Pipeline_RAST2_fu_88_ap_idle),
    .ap_ready(grp_rasterization2_odd_Pipeline_RAST2_fu_88_ap_ready),
    .max_index_V(max_index_V_reg_334),
    .max_min_V_2_cast(max_min_V_2_reg_349),
    .max_min_V(max_min_V_reg_339),
    .max_min_V_1(max_min_V_1_reg_344),
    .triangle_2d_same_x0_V_cast(triangle_2d_same_x0_V_reg_289),
    .rhs(ret_V_22_reg_354),
    .triangle_2d_same_y0_V_cast(triangle_2d_same_y0_V_reg_295),
    .rhs_1(ret_V_25_reg_359),
    .triangle_2d_same_x1_V_cast(triangle_2d_same_x1_V_reg_301),
    .rhs_V(ret_V_28_reg_364),
    .triangle_2d_same_y1_V_cast(triangle_2d_same_y1_V_reg_311),
    .rhs_V_1(ret_V_31_reg_369),
    .triangle_2d_same_x2_V_cast(triangle_2d_same_x2_V_reg_317),
    .rhs_V_3(ret_V_34_reg_374),
    .triangle_2d_same_y2_V_cast(triangle_2d_same_y2_V_reg_323),
    .rhs_V_4(ret_V_37_reg_379),
    .triangle_2d_same_z_V(triangle_2d_same_z_V_reg_329),
    .i_bot_V_out(grp_rasterization2_odd_Pipeline_RAST2_fu_88_i_bot_V_out),
    .i_bot_V_out_ap_vld(grp_rasterization2_odd_Pipeline_RAST2_fu_88_i_bot_V_out_ap_vld),
    .i_top_V_out(grp_rasterization2_odd_Pipeline_RAST2_fu_88_i_top_V_out),
    .i_top_V_out_ap_vld(grp_rasterization2_odd_Pipeline_RAST2_fu_88_i_top_V_out_ap_vld),
    .i_V_out(grp_rasterization2_odd_Pipeline_RAST2_fu_88_i_V_out),
    .i_V_out_ap_vld(grp_rasterization2_odd_Pipeline_RAST2_fu_88_i_V_out_ap_vld),
    .fragment_x_V_address0(grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_x_V_address0),
    .fragment_x_V_ce0(grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_x_V_ce0),
    .fragment_x_V_we0(grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_x_V_we0),
    .fragment_x_V_d0(grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_x_V_d0),
    .fragment_y_V_address0(grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_y_V_address0),
    .fragment_y_V_ce0(grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_y_V_ce0),
    .fragment_y_V_we0(grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_y_V_we0),
    .fragment_y_V_d0(grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_y_V_d0),
    .fragment_z_V_address0(grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_z_V_address0),
    .fragment_z_V_ce0(grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_z_V_ce0),
    .fragment_z_V_we0(grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_z_V_we0),
    .fragment_z_V_d0(grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_z_V_d0),
    .fragment_color_V_address0(grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_color_V_address0),
    .fragment_color_V_ce0(grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_color_V_ce0),
    .fragment_color_V_we0(grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_color_V_we0),
    .fragment_color_V_d0(grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_color_V_d0)
);

rasterization2_m_rasterization2_odd_Pipeline_VITIS_LOOP_101_1 grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_ap_start),
    .ap_done(grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_ap_done),
    .ap_idle(grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_ap_idle),
    .ap_ready(grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_ap_ready),
    .Output_2_TREADY(grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_Output_2_TREADY),
    .Output_1_TREADY(grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_Output_1_TREADY),
    .i_V_reload(grp_rasterization2_odd_Pipeline_RAST2_fu_88_i_V_out),
    .Output_1_TDATA(grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_Output_1_TDATA),
    .Output_1_TVALID(grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_Output_1_TVALID),
    .Output_2_TDATA(grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_Output_2_TDATA),
    .Output_2_TVALID(grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_Output_2_TVALID),
    .fragment_x_V_address0(grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_fragment_x_V_address0),
    .fragment_x_V_ce0(grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_fragment_x_V_ce0),
    .fragment_x_V_q0(fragment_x_V_q0),
    .fragment_y_V_address0(grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_fragment_y_V_address0),
    .fragment_y_V_ce0(grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_fragment_y_V_ce0),
    .fragment_y_V_q0(fragment_y_V_q0),
    .fragment_z_V_address0(grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_fragment_z_V_address0),
    .fragment_z_V_ce0(grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_fragment_z_V_ce0),
    .fragment_z_V_q0(fragment_z_V_q0),
    .fragment_color_V_address0(grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_fragment_color_V_address0),
    .fragment_color_V_ce0(grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_fragment_color_V_ce0),
    .fragment_color_V_q0(fragment_color_V_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_rasterization2_odd_Pipeline_RAST2_fu_88_ap_start_reg <= 1'b0;
    end else begin
        if ((~((1'b0 == Input_1_TVALID) | (1'b1 == ap_block_state4_io) | ((icmp_ln64_reg_307 == 1'd0) & (1'b0 == Output_2_TREADY)) | ((icmp_ln64_reg_307 == 1'd0) & (1'b0 == Output_1_TREADY))) & (icmp_ln64_reg_307 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
            grp_rasterization2_odd_Pipeline_RAST2_fu_88_ap_start_reg <= 1'b1;
        end else if ((grp_rasterization2_odd_Pipeline_RAST2_fu_88_ap_ready == 1'b1)) begin
            grp_rasterization2_odd_Pipeline_RAST2_fu_88_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_ap_start_reg <= 1'b1;
        end else if ((grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_ap_ready == 1'b1)) begin
            grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        icmp_ln64_reg_307 <= icmp_ln64_fu_172_p2;
        triangle_2d_same_x0_V_reg_289 <= {{Input_1_TDATA[15:8]}};
        triangle_2d_same_x1_V_reg_301 <= {{Input_1_TDATA[31:24]}};
        triangle_2d_same_y0_V_reg_295 <= {{Input_1_TDATA[23:16]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        max_index_V_reg_334 <= max_index_V_fu_182_p1;
        max_min_V_reg_339 <= {{Input_1_TDATA[23:16]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        max_min_V_1_reg_344 <= max_min_V_1_fu_186_p1;
        max_min_V_2_reg_349 <= {{Input_1_TDATA[23:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_307 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        ret_V_22_reg_354 <= ret_V_22_fu_197_p2;
        ret_V_25_reg_359 <= ret_V_25_fu_210_p2;
        ret_V_28_reg_364 <= ret_V_28_fu_220_p2;
        ret_V_31_reg_369 <= ret_V_31_fu_230_p2;
        ret_V_34_reg_374 <= ret_V_34_fu_237_p2;
        ret_V_37_reg_379 <= ret_V_37_fu_244_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        triangle_2d_same_x2_V_reg_317 <= {{Input_1_TDATA[15:8]}};
        triangle_2d_same_y1_V_reg_311 <= triangle_2d_same_y1_V_fu_178_p1;
        triangle_2d_same_y2_V_reg_323 <= {{Input_1_TDATA[23:16]}};
        triangle_2d_same_z_V_reg_329 <= {{Input_1_TDATA[31:24]}};
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        Input_1_TDATA_blk_n = Input_1_TVALID;
    end else begin
        Input_1_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (1'b1 == Input_1_TVALID)) | ((1'b1 == ap_CS_fsm_state2) & (1'b1 == Input_1_TVALID)) | (~((1'b0 == Input_1_TVALID) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | (~((1'b0 == Input_1_TVALID) | (1'b1 == ap_block_state4_io) | ((icmp_ln64_reg_307 == 1'd0) & (1'b0 == Output_2_TREADY)) | ((icmp_ln64_reg_307 == 1'd0) & (1'b0 == Output_1_TREADY))) & (1'b1 == ap_CS_fsm_state4)))) begin
        Input_1_TREADY = 1'b1;
    end else begin
        Input_1_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b0 == Output_2_TREADY) | (1'b0 == Output_1_TREADY)) & (1'b1 == ap_CS_fsm_state6))) begin
        Output_1_TDATA = zext_ln232_fu_257_p1;
    end else if ((~((1'b0 == Input_1_TVALID) | ((icmp_ln64_reg_307 == 1'd0) & (1'b0 == Output_2_TREADY)) | ((icmp_ln64_reg_307 == 1'd0) & (1'b0 == Output_1_TREADY))) & (icmp_ln64_reg_307 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        Output_1_TDATA = 32'd0;
    end else if (((icmp_ln64_reg_307 == 1'd1) & (1'b1 == ap_CS_fsm_state8) & (grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_Output_1_TVALID == 1'b1))) begin
        Output_1_TDATA = grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_Output_1_TDATA;
    end else begin
        Output_1_TDATA = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((icmp_ln64_reg_307 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        Output_1_TDATA_blk_n = Output_1_TREADY;
    end else begin
        Output_1_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((1'b0 == Output_2_TREADY) | (1'b0 == Output_1_TREADY) | (1'b1 == ap_block_state6_io)) & (1'b1 == ap_CS_fsm_state6)) | (~((1'b0 == Input_1_TVALID) | (1'b1 == ap_block_state4_io) | ((icmp_ln64_reg_307 == 1'd0) & (1'b0 == Output_2_TREADY)) | ((icmp_ln64_reg_307 == 1'd0) & (1'b0 == Output_1_TREADY))) & (icmp_ln64_reg_307 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        Output_1_TVALID = 1'b1;
    end else if (((icmp_ln64_reg_307 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        Output_1_TVALID = grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_Output_1_TVALID;
    end else begin
        Output_1_TVALID = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b0 == Output_2_TREADY) | (1'b0 == Output_1_TREADY)) & (1'b1 == ap_CS_fsm_state6))) begin
        Output_2_TDATA = zext_ln232_1_fu_262_p1;
    end else if ((~((1'b0 == Input_1_TVALID) | ((icmp_ln64_reg_307 == 1'd0) & (1'b0 == Output_2_TREADY)) | ((icmp_ln64_reg_307 == 1'd0) & (1'b0 == Output_1_TREADY))) & (icmp_ln64_reg_307 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        Output_2_TDATA = 32'd0;
    end else if (((icmp_ln64_reg_307 == 1'd1) & (1'b1 == ap_CS_fsm_state8) & (grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_Output_2_TVALID == 1'b1))) begin
        Output_2_TDATA = grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_Output_2_TDATA;
    end else begin
        Output_2_TDATA = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((icmp_ln64_reg_307 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        Output_2_TDATA_blk_n = Output_2_TREADY;
    end else begin
        Output_2_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((1'b0 == Output_2_TREADY) | (1'b0 == Output_1_TREADY) | (1'b1 == ap_block_state6_io)) & (1'b1 == ap_CS_fsm_state6)) | (~((1'b0 == Input_1_TVALID) | (1'b1 == ap_block_state4_io) | ((icmp_ln64_reg_307 == 1'd0) & (1'b0 == Output_2_TREADY)) | ((icmp_ln64_reg_307 == 1'd0) & (1'b0 == Output_1_TREADY))) & (icmp_ln64_reg_307 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        Output_2_TVALID = 1'b1;
    end else if (((icmp_ln64_reg_307 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        Output_2_TVALID = grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_Output_2_TVALID;
    end else begin
        Output_2_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == Input_1_TVALID) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == Input_1_TVALID)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == Input_1_TVALID)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == Input_1_TVALID) | (1'b1 == ap_block_state4_io) | ((icmp_ln64_reg_307 == 1'd0) & (1'b0 == Output_2_TREADY)) | ((icmp_ln64_reg_307 == 1'd0) & (1'b0 == Output_1_TREADY)))) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_rasterization2_odd_Pipeline_RAST2_fu_88_ap_done == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == Output_2_TREADY) | (1'b0 == Output_1_TREADY) | (1'b1 == ap_block_state6_io))) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

assign ap_ST_fsm_state7_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state8_on_subcall_done)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state8_on_subcall_done) & (1'b1 == ap_CS_fsm_state8)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state8_on_subcall_done) & (1'b1 == ap_CS_fsm_state8))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln64_reg_307 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        fragment_color_V_address0 = grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_fragment_color_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        fragment_color_V_address0 = grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_color_V_address0;
    end else begin
        fragment_color_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln64_reg_307 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        fragment_color_V_ce0 = grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_fragment_color_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        fragment_color_V_ce0 = grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_color_V_ce0;
    end else begin
        fragment_color_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        fragment_color_V_we0 = grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_color_V_we0;
    end else begin
        fragment_color_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln64_reg_307 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        fragment_x_V_address0 = grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_fragment_x_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        fragment_x_V_address0 = grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_x_V_address0;
    end else begin
        fragment_x_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln64_reg_307 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        fragment_x_V_ce0 = grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_fragment_x_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        fragment_x_V_ce0 = grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_x_V_ce0;
    end else begin
        fragment_x_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        fragment_x_V_we0 = grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_x_V_we0;
    end else begin
        fragment_x_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln64_reg_307 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        fragment_y_V_address0 = grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_fragment_y_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        fragment_y_V_address0 = grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_y_V_address0;
    end else begin
        fragment_y_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln64_reg_307 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        fragment_y_V_ce0 = grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_fragment_y_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        fragment_y_V_ce0 = grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_y_V_ce0;
    end else begin
        fragment_y_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        fragment_y_V_we0 = grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_y_V_we0;
    end else begin
        fragment_y_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln64_reg_307 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        fragment_z_V_address0 = grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_fragment_z_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        fragment_z_V_address0 = grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_z_V_address0;
    end else begin
        fragment_z_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln64_reg_307 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        fragment_z_V_ce0 = grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_fragment_z_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        fragment_z_V_ce0 = grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_z_V_ce0;
    end else begin
        fragment_z_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        fragment_z_V_we0 = grp_rasterization2_odd_Pipeline_RAST2_fu_88_fragment_z_V_we0;
    end else begin
        fragment_z_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((1'b0 == Input_1_TVALID) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (1'b1 == Input_1_TVALID))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (1'b1 == Input_1_TVALID))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~((1'b0 == Input_1_TVALID) | (1'b1 == ap_block_state4_io) | ((icmp_ln64_reg_307 == 1'd0) & (1'b0 == Output_2_TREADY)) | ((icmp_ln64_reg_307 == 1'd0) & (1'b0 == Output_1_TREADY))) & (icmp_ln64_reg_307 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else if ((~((1'b0 == Input_1_TVALID) | (1'b1 == ap_block_state4_io) | ((icmp_ln64_reg_307 == 1'd0) & (1'b0 == Output_2_TREADY)) | ((icmp_ln64_reg_307 == 1'd0) & (1'b0 == Output_1_TREADY))) & (icmp_ln64_reg_307 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (grp_rasterization2_odd_Pipeline_RAST2_fu_88_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if ((~((1'b0 == Output_2_TREADY) | (1'b0 == Output_1_TREADY) | (1'b1 == ap_block_state6_io)) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b0 == ap_block_state8_on_subcall_done) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

always @ (*) begin
    ap_block_state1 = ((1'b0 == Input_1_TVALID) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state4 = ((1'b0 == Input_1_TVALID) | ((icmp_ln64_reg_307 == 1'd0) & (1'b0 == Output_2_TREADY)) | ((icmp_ln64_reg_307 == 1'd0) & (1'b0 == Output_1_TREADY)));
end

always @ (*) begin
    ap_block_state4_ignore_call12 = ((1'b0 == Input_1_TVALID) | ((icmp_ln64_reg_307 == 1'd0) & (1'b0 == Output_2_TREADY)) | ((icmp_ln64_reg_307 == 1'd0) & (1'b0 == Output_1_TREADY)));
end

always @ (*) begin
    ap_block_state4_io = (((icmp_ln64_reg_307 == 1'd0) & (1'b0 == Output_2_TREADY)) | ((icmp_ln64_reg_307 == 1'd0) & (1'b0 == Output_1_TREADY)));
end

always @ (*) begin
    ap_block_state6 = ((1'b0 == Output_2_TREADY) | (1'b0 == Output_1_TREADY));
end

always @ (*) begin
    ap_block_state6_io = ((1'b0 == Output_2_TREADY) | (1'b0 == Output_1_TREADY));
end

always @ (*) begin
    ap_block_state8_on_subcall_done = ((icmp_ln64_reg_307 == 1'd1) & (grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_ap_done == 1'b0));
end

assign flag_V_fu_168_p1 = Input_1_TDATA[1:0];

assign grp_rasterization2_odd_Pipeline_RAST2_fu_88_ap_start = grp_rasterization2_odd_Pipeline_RAST2_fu_88_ap_start_reg;

assign grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_Output_1_TREADY = (ap_CS_fsm_state8 & Output_1_TREADY);

assign grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_Output_2_TREADY = (ap_CS_fsm_state8 & Output_2_TREADY);

assign grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_ap_start = grp_rasterization2_odd_Pipeline_VITIS_LOOP_101_1_fu_120_ap_start_reg;

assign icmp_ln64_fu_172_p2 = ((flag_V_fu_168_p1 == 2'd0) ? 1'b1 : 1'b0);

assign max_index_V_fu_182_p1 = Input_1_TDATA[15:0];

assign max_min_V_1_fu_186_p1 = Input_1_TDATA[7:0];

assign ret_V_22_fu_197_p2 = (triangle_2d_same_y1_V_cast_fu_191_p1 - triangle_2d_same_y0_V_cast_fu_194_p1);

assign ret_V_25_fu_210_p2 = (triangle_2d_same_x1_V_cast_fu_204_p1 - triangle_2d_same_x0_V_cast_fu_207_p1);

assign ret_V_28_fu_220_p2 = (triangle_2d_same_y2_V_cast_fu_217_p1 - triangle_2d_same_y1_V_cast_fu_191_p1);

assign ret_V_31_fu_230_p2 = (triangle_2d_same_x2_V_cast_fu_227_p1 - triangle_2d_same_x1_V_cast_fu_204_p1);

assign ret_V_34_fu_237_p2 = (triangle_2d_same_y0_V_cast_fu_194_p1 - triangle_2d_same_y2_V_cast_fu_217_p1);

assign ret_V_37_fu_244_p2 = (triangle_2d_same_x0_V_cast_fu_207_p1 - triangle_2d_same_x2_V_cast_fu_227_p1);

assign triangle_2d_same_x0_V_cast_fu_207_p1 = triangle_2d_same_x0_V_reg_289;

assign triangle_2d_same_x1_V_cast_fu_204_p1 = triangle_2d_same_x1_V_reg_301;

assign triangle_2d_same_x2_V_cast_fu_227_p1 = triangle_2d_same_x2_V_reg_317;

assign triangle_2d_same_y0_V_cast_fu_194_p1 = triangle_2d_same_y0_V_reg_295;

assign triangle_2d_same_y1_V_cast_fu_191_p1 = triangle_2d_same_y1_V_reg_311;

assign triangle_2d_same_y1_V_fu_178_p1 = Input_1_TDATA[7:0];

assign triangle_2d_same_y2_V_cast_fu_217_p1 = triangle_2d_same_y2_V_reg_323;

assign zext_ln232_1_fu_262_p1 = grp_rasterization2_odd_Pipeline_RAST2_fu_88_i_bot_V_out;

assign zext_ln232_fu_257_p1 = grp_rasterization2_odd_Pipeline_RAST2_fu_88_i_top_V_out;

endmodule //rasterization2_m_rasterization2_odd
