// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="rasterization2_m_rasterization2_m,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu9eg-ffvb1156-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.150000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=8,HLS_SYN_DSP=0,HLS_SYN_FF=3912,HLS_SYN_LUT=4120,HLS_VERSION=2022_1}" *)

module rasterization2_m (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Input_1_TDATA,
        Input_1_TVALID,
        Input_1_TREADY,
        Output_1_TDATA,
        Output_1_TVALID,
        Output_1_TREADY,
        Output_2_TDATA,
        Output_2_TVALID,
        Output_2_TREADY,
        Input_2_TDATA,
        Input_2_TVALID,
        Input_2_TREADY,
        Output_3_TDATA,
        Output_3_TVALID,
        Output_3_TREADY,
        Output_4_TDATA,
        Output_4_TVALID,
        Output_4_TREADY
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] Input_1_TDATA;
input   Input_1_TVALID;
output   Input_1_TREADY;
output  [31:0] Output_1_TDATA;
output   Output_1_TVALID;
input   Output_1_TREADY;
output  [31:0] Output_2_TDATA;
output   Output_2_TVALID;
input   Output_2_TREADY;
input  [31:0] Input_2_TDATA;
input   Input_2_TVALID;
output   Input_2_TREADY;
output  [31:0] Output_3_TDATA;
output   Output_3_TVALID;
input   Output_3_TREADY;
output  [31:0] Output_4_TDATA;
output   Output_4_TVALID;
input   Output_4_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    grp_rasterization2_odd_fu_52_ap_start;
wire    grp_rasterization2_odd_fu_52_ap_done;
wire    grp_rasterization2_odd_fu_52_ap_idle;
wire    grp_rasterization2_odd_fu_52_ap_ready;
wire    grp_rasterization2_odd_fu_52_Input_1_TREADY;
wire   [31:0] grp_rasterization2_odd_fu_52_Output_1_TDATA;
wire    grp_rasterization2_odd_fu_52_Output_1_TVALID;
wire    grp_rasterization2_odd_fu_52_Output_1_TREADY;
wire   [31:0] grp_rasterization2_odd_fu_52_Output_2_TDATA;
wire    grp_rasterization2_odd_fu_52_Output_2_TVALID;
wire    grp_rasterization2_odd_fu_52_Output_2_TREADY;
wire    grp_rasterization2_even_fu_70_ap_start;
wire    grp_rasterization2_even_fu_70_ap_done;
wire    grp_rasterization2_even_fu_70_ap_idle;
wire    grp_rasterization2_even_fu_70_ap_ready;
wire    grp_rasterization2_even_fu_70_Input_2_TREADY;
wire   [31:0] grp_rasterization2_even_fu_70_Output_3_TDATA;
wire    grp_rasterization2_even_fu_70_Output_3_TVALID;
wire    grp_rasterization2_even_fu_70_Output_3_TREADY;
wire   [31:0] grp_rasterization2_even_fu_70_Output_4_TDATA;
wire    grp_rasterization2_even_fu_70_Output_4_TVALID;
wire    grp_rasterization2_even_fu_70_Output_4_TREADY;
reg    grp_rasterization2_odd_fu_52_ap_start_reg;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
reg    grp_rasterization2_even_fu_70_ap_start_reg;
wire    ap_CS_fsm_state4;
wire    regslice_both_Output_1_U_apdone_blk;
wire    regslice_both_Output_2_U_apdone_blk;
wire    regslice_both_Output_3_U_apdone_blk;
wire    regslice_both_Output_4_U_apdone_blk;
reg    ap_block_state4;
reg   [3:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_block_state3_on_subcall_done;
reg    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    regslice_both_Input_1_U_apdone_blk;
wire   [31:0] Input_1_TDATA_int_regslice;
wire    Input_1_TVALID_int_regslice;
reg    Input_1_TREADY_int_regslice;
wire    regslice_both_Input_1_U_ack_in;
wire    Output_1_TREADY_int_regslice;
wire    regslice_both_Output_1_U_vld_out;
wire    Output_2_TREADY_int_regslice;
wire    regslice_both_Output_2_U_vld_out;
wire    regslice_both_Input_2_U_apdone_blk;
wire   [31:0] Input_2_TDATA_int_regslice;
wire    Input_2_TVALID_int_regslice;
reg    Input_2_TREADY_int_regslice;
wire    regslice_both_Input_2_U_ack_in;
wire    Output_3_TREADY_int_regslice;
wire    regslice_both_Output_3_U_vld_out;
wire    Output_4_TREADY_int_regslice;
wire    regslice_both_Output_4_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 grp_rasterization2_odd_fu_52_ap_start_reg = 1'b0;
#0 grp_rasterization2_even_fu_70_ap_start_reg = 1'b0;
end

rasterization2_m_rasterization2_odd grp_rasterization2_odd_fu_52(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_rasterization2_odd_fu_52_ap_start),
    .ap_done(grp_rasterization2_odd_fu_52_ap_done),
    .ap_idle(grp_rasterization2_odd_fu_52_ap_idle),
    .ap_ready(grp_rasterization2_odd_fu_52_ap_ready),
    .Input_1_TDATA(Input_1_TDATA_int_regslice),
    .Input_1_TVALID(Input_1_TVALID_int_regslice),
    .Input_1_TREADY(grp_rasterization2_odd_fu_52_Input_1_TREADY),
    .Output_1_TDATA(grp_rasterization2_odd_fu_52_Output_1_TDATA),
    .Output_1_TVALID(grp_rasterization2_odd_fu_52_Output_1_TVALID),
    .Output_1_TREADY(grp_rasterization2_odd_fu_52_Output_1_TREADY),
    .Output_2_TDATA(grp_rasterization2_odd_fu_52_Output_2_TDATA),
    .Output_2_TVALID(grp_rasterization2_odd_fu_52_Output_2_TVALID),
    .Output_2_TREADY(grp_rasterization2_odd_fu_52_Output_2_TREADY)
);

rasterization2_m_rasterization2_even grp_rasterization2_even_fu_70(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_rasterization2_even_fu_70_ap_start),
    .ap_done(grp_rasterization2_even_fu_70_ap_done),
    .ap_idle(grp_rasterization2_even_fu_70_ap_idle),
    .ap_ready(grp_rasterization2_even_fu_70_ap_ready),
    .Input_2_TDATA(Input_2_TDATA_int_regslice),
    .Input_2_TVALID(Input_2_TVALID_int_regslice),
    .Input_2_TREADY(grp_rasterization2_even_fu_70_Input_2_TREADY),
    .Output_3_TDATA(grp_rasterization2_even_fu_70_Output_3_TDATA),
    .Output_3_TVALID(grp_rasterization2_even_fu_70_Output_3_TVALID),
    .Output_3_TREADY(grp_rasterization2_even_fu_70_Output_3_TREADY),
    .Output_4_TDATA(grp_rasterization2_even_fu_70_Output_4_TDATA),
    .Output_4_TVALID(grp_rasterization2_even_fu_70_Output_4_TVALID),
    .Output_4_TREADY(grp_rasterization2_even_fu_70_Output_4_TREADY)
);

rasterization2_m_regslice_both #(
    .DataWidth( 32 ))
regslice_both_Input_1_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(Input_1_TDATA),
    .vld_in(Input_1_TVALID),
    .ack_in(regslice_both_Input_1_U_ack_in),
    .data_out(Input_1_TDATA_int_regslice),
    .vld_out(Input_1_TVALID_int_regslice),
    .ack_out(Input_1_TREADY_int_regslice),
    .apdone_blk(regslice_both_Input_1_U_apdone_blk)
);

rasterization2_m_regslice_both #(
    .DataWidth( 32 ))
regslice_both_Output_1_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_rasterization2_odd_fu_52_Output_1_TDATA),
    .vld_in(grp_rasterization2_odd_fu_52_Output_1_TVALID),
    .ack_in(Output_1_TREADY_int_regslice),
    .data_out(Output_1_TDATA),
    .vld_out(regslice_both_Output_1_U_vld_out),
    .ack_out(Output_1_TREADY),
    .apdone_blk(regslice_both_Output_1_U_apdone_blk)
);

rasterization2_m_regslice_both #(
    .DataWidth( 32 ))
regslice_both_Output_2_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_rasterization2_odd_fu_52_Output_2_TDATA),
    .vld_in(grp_rasterization2_odd_fu_52_Output_2_TVALID),
    .ack_in(Output_2_TREADY_int_regslice),
    .data_out(Output_2_TDATA),
    .vld_out(regslice_both_Output_2_U_vld_out),
    .ack_out(Output_2_TREADY),
    .apdone_blk(regslice_both_Output_2_U_apdone_blk)
);

rasterization2_m_regslice_both #(
    .DataWidth( 32 ))
regslice_both_Input_2_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(Input_2_TDATA),
    .vld_in(Input_2_TVALID),
    .ack_in(regslice_both_Input_2_U_ack_in),
    .data_out(Input_2_TDATA_int_regslice),
    .vld_out(Input_2_TVALID_int_regslice),
    .ack_out(Input_2_TREADY_int_regslice),
    .apdone_blk(regslice_both_Input_2_U_apdone_blk)
);

rasterization2_m_regslice_both #(
    .DataWidth( 32 ))
regslice_both_Output_3_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_rasterization2_even_fu_70_Output_3_TDATA),
    .vld_in(grp_rasterization2_even_fu_70_Output_3_TVALID),
    .ack_in(Output_3_TREADY_int_regslice),
    .data_out(Output_3_TDATA),
    .vld_out(regslice_both_Output_3_U_vld_out),
    .ack_out(Output_3_TREADY),
    .apdone_blk(regslice_both_Output_3_U_apdone_blk)
);

rasterization2_m_regslice_both #(
    .DataWidth( 32 ))
regslice_both_Output_4_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_rasterization2_even_fu_70_Output_4_TDATA),
    .vld_in(grp_rasterization2_even_fu_70_Output_4_TVALID),
    .ack_in(Output_4_TREADY_int_regslice),
    .data_out(Output_4_TDATA),
    .vld_out(regslice_both_Output_4_U_vld_out),
    .ack_out(Output_4_TREADY),
    .apdone_blk(regslice_both_Output_4_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_rasterization2_even_fu_70_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_rasterization2_even_fu_70_ap_start_reg <= 1'b1;
        end else if ((grp_rasterization2_even_fu_70_ap_ready == 1'b1)) begin
            grp_rasterization2_even_fu_70_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_rasterization2_odd_fu_52_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_rasterization2_odd_fu_52_ap_start_reg <= 1'b1;
        end else if ((grp_rasterization2_odd_fu_52_ap_ready == 1'b1)) begin
            grp_rasterization2_odd_fu_52_ap_start_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        Input_1_TREADY_int_regslice = grp_rasterization2_odd_fu_52_Input_1_TREADY;
    end else begin
        Input_1_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        Input_2_TREADY_int_regslice = grp_rasterization2_even_fu_70_Input_2_TREADY;
    end else begin
        Input_2_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state3_on_subcall_done)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if (((regslice_both_Output_4_U_apdone_blk == 1'b1) | (regslice_both_Output_3_U_apdone_blk == 1'b1) | (regslice_both_Output_2_U_apdone_blk == 1'b1) | (regslice_both_Output_1_U_apdone_blk == 1'b1))) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if ((~((regslice_both_Output_4_U_apdone_blk == 1'b1) | (regslice_both_Output_3_U_apdone_blk == 1'b1) | (regslice_both_Output_2_U_apdone_blk == 1'b1) | (regslice_both_Output_1_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((regslice_both_Output_4_U_apdone_blk == 1'b1) | (regslice_both_Output_3_U_apdone_blk == 1'b1) | (regslice_both_Output_2_U_apdone_blk == 1'b1) | (regslice_both_Output_1_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b0 == ap_block_state3_on_subcall_done) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~((regslice_both_Output_4_U_apdone_blk == 1'b1) | (regslice_both_Output_3_U_apdone_blk == 1'b1) | (regslice_both_Output_2_U_apdone_blk == 1'b1) | (regslice_both_Output_1_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Input_1_TREADY = regslice_both_Input_1_U_ack_in;

assign Input_2_TREADY = regslice_both_Input_2_U_ack_in;

assign Output_1_TVALID = regslice_both_Output_1_U_vld_out;

assign Output_2_TVALID = regslice_both_Output_2_U_vld_out;

assign Output_3_TVALID = regslice_both_Output_3_U_vld_out;

assign Output_4_TVALID = regslice_both_Output_4_U_vld_out;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_state3_on_subcall_done = ((grp_rasterization2_even_fu_70_ap_done == 1'b0) | (grp_rasterization2_odd_fu_52_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state4 = ((regslice_both_Output_4_U_apdone_blk == 1'b1) | (regslice_both_Output_3_U_apdone_blk == 1'b1) | (regslice_both_Output_2_U_apdone_blk == 1'b1) | (regslice_both_Output_1_U_apdone_blk == 1'b1));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_rasterization2_even_fu_70_Output_3_TREADY = (ap_CS_fsm_state3 & Output_3_TREADY_int_regslice);

assign grp_rasterization2_even_fu_70_Output_4_TREADY = (ap_CS_fsm_state3 & Output_4_TREADY_int_regslice);

assign grp_rasterization2_even_fu_70_ap_start = grp_rasterization2_even_fu_70_ap_start_reg;

assign grp_rasterization2_odd_fu_52_Output_1_TREADY = (ap_CS_fsm_state3 & Output_1_TREADY_int_regslice);

assign grp_rasterization2_odd_fu_52_Output_2_TREADY = (ap_CS_fsm_state3 & Output_2_TREADY_int_regslice);

assign grp_rasterization2_odd_fu_52_ap_start = grp_rasterization2_odd_fu_52_ap_start_reg;

endmodule //rasterization2_m
