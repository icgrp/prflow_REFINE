// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module coloringFB_bot_m_coloringFB_bot_m_Pipeline_COLORING_FB (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Input_1_TVALID,
        tmp_V_cast,
        Input_1_TDATA,
        Input_1_TREADY,
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_address0,
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_ce0,
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_we0,
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_d0,
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_1_address0,
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_1_ce0,
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_1_we0,
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_1_d0,
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_2_address0,
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_2_ce0,
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_2_we0,
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_2_d0,
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_3_address0,
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_3_ce0,
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_3_we0,
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_3_d0,
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_4_address0,
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_4_ce0,
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_4_we0,
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_4_d0,
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_5_address0,
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_5_ce0,
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_5_we0,
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_5_d0,
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_6_address0,
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_6_ce0,
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_6_we0,
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_6_d0,
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_7_address0,
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_7_ce0,
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_7_we0,
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_7_d0
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   Input_1_TVALID;
input  [15:0] tmp_V_cast;
input  [31:0] Input_1_TDATA;
output   Input_1_TREADY;
output  [11:0] coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_address0;
output   coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_ce0;
output   coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_we0;
output  [7:0] coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_d0;
output  [11:0] coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_1_address0;
output   coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_1_ce0;
output   coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_1_we0;
output  [7:0] coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_1_d0;
output  [11:0] coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_2_address0;
output   coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_2_ce0;
output   coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_2_we0;
output  [7:0] coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_2_d0;
output  [11:0] coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_3_address0;
output   coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_3_ce0;
output   coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_3_we0;
output  [7:0] coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_3_d0;
output  [11:0] coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_4_address0;
output   coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_4_ce0;
output   coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_4_we0;
output  [7:0] coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_4_d0;
output  [11:0] coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_5_address0;
output   coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_5_ce0;
output   coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_5_we0;
output  [7:0] coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_5_d0;
output  [11:0] coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_6_address0;
output   coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_6_ce0;
output   coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_6_we0;
output  [7:0] coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_6_d0;
output  [11:0] coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_7_address0;
output   coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_7_ce0;
output   coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_7_we0;
output  [7:0] coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_7_d0;

reg ap_idle;
reg Input_1_TREADY;
reg coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_ce0;
reg coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_we0;
reg coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_1_ce0;
reg coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_1_we0;
reg coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_2_ce0;
reg coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_2_we0;
reg coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_3_ce0;
reg coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_3_we0;
reg coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_4_ce0;
reg coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_4_we0;
reg coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_5_ce0;
reg coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_5_we0;
reg coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_6_ce0;
reg coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_6_we0;
reg coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_7_ce0;
reg coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_7_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] icmp_ln36_fu_214_p2;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    Input_1_TDATA_blk_n;
wire   [63:0] zext_ln46_1_fu_276_p1;
reg   [15:0] i_V_2_fu_86;
wire   [15:0] i_V_3_fu_220_p2;
wire    ap_loop_init;
reg   [15:0] ap_sig_allocacmp_i_V;
wire   [2:0] trunc_ln_fu_288_p4;
wire   [7:0] trunc_ln46_fu_244_p1;
wire   [4:0] lshr_ln_fu_256_p4;
wire   [11:0] tmp_s_fu_248_p3;
wire   [11:0] zext_ln46_fu_266_p1;
wire   [11:0] add_ln46_fu_270_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_start_int;
reg    ap_condition_224;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_done_reg = 1'b0;
end

coloringFB_bot_m_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((ap_start_int == 1'b0) | ((1'b0 == Input_1_TVALID) & (icmp_ln36_fu_214_p2 == 1'd0))) & (ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_224)) begin
        if ((icmp_ln36_fu_214_p2 == 1'd0)) begin
            i_V_2_fu_86 <= i_V_3_fu_220_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_V_2_fu_86 <= 16'd0;
        end
    end
end

always @ (*) begin
    if (((icmp_ln36_fu_214_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        Input_1_TDATA_blk_n = Input_1_TVALID;
    end else begin
        Input_1_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b0 == Input_1_TVALID) & (icmp_ln36_fu_214_p2 == 1'd0))) & (icmp_ln36_fu_214_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        Input_1_TREADY = 1'b1;
    end else begin
        Input_1_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) | ((1'b0 == Input_1_TVALID) & (icmp_ln36_fu_214_p2 == 1'd0)))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b0 == Input_1_TVALID) & (icmp_ln36_fu_214_p2 == 1'd0))) & (icmp_ln36_fu_214_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b0 == Input_1_TVALID) & (icmp_ln36_fu_214_p2 == 1'd0))) & (ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b0 == Input_1_TVALID) & (icmp_ln36_fu_214_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_V = 16'd0;
    end else begin
        ap_sig_allocacmp_i_V = i_V_2_fu_86;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b0 == Input_1_TVALID) & (icmp_ln36_fu_214_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state1))) begin
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_1_ce0 = 1'b1;
    end else begin
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b0 == Input_1_TVALID) & (icmp_ln36_fu_214_p2 == 1'd0))) & (icmp_ln36_fu_214_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln_fu_288_p4 == 3'd1))) begin
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_1_we0 = 1'b1;
    end else begin
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b0 == Input_1_TVALID) & (icmp_ln36_fu_214_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state1))) begin
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_2_ce0 = 1'b1;
    end else begin
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b0 == Input_1_TVALID) & (icmp_ln36_fu_214_p2 == 1'd0))) & (icmp_ln36_fu_214_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln_fu_288_p4 == 3'd2))) begin
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_2_we0 = 1'b1;
    end else begin
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b0 == Input_1_TVALID) & (icmp_ln36_fu_214_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state1))) begin
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_3_ce0 = 1'b1;
    end else begin
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b0 == Input_1_TVALID) & (icmp_ln36_fu_214_p2 == 1'd0))) & (icmp_ln36_fu_214_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln_fu_288_p4 == 3'd3))) begin
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_3_we0 = 1'b1;
    end else begin
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b0 == Input_1_TVALID) & (icmp_ln36_fu_214_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state1))) begin
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_4_ce0 = 1'b1;
    end else begin
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b0 == Input_1_TVALID) & (icmp_ln36_fu_214_p2 == 1'd0))) & (icmp_ln36_fu_214_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln_fu_288_p4 == 3'd4))) begin
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_4_we0 = 1'b1;
    end else begin
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b0 == Input_1_TVALID) & (icmp_ln36_fu_214_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state1))) begin
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_5_ce0 = 1'b1;
    end else begin
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b0 == Input_1_TVALID) & (icmp_ln36_fu_214_p2 == 1'd0))) & (icmp_ln36_fu_214_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln_fu_288_p4 == 3'd5))) begin
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_5_we0 = 1'b1;
    end else begin
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b0 == Input_1_TVALID) & (icmp_ln36_fu_214_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state1))) begin
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_6_ce0 = 1'b1;
    end else begin
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b0 == Input_1_TVALID) & (icmp_ln36_fu_214_p2 == 1'd0))) & (icmp_ln36_fu_214_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln_fu_288_p4 == 3'd6))) begin
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_6_we0 = 1'b1;
    end else begin
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b0 == Input_1_TVALID) & (icmp_ln36_fu_214_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state1))) begin
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_7_ce0 = 1'b1;
    end else begin
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b0 == Input_1_TVALID) & (icmp_ln36_fu_214_p2 == 1'd0))) & (icmp_ln36_fu_214_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln_fu_288_p4 == 3'd7))) begin
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_7_we0 = 1'b1;
    end else begin
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b0 == Input_1_TVALID) & (icmp_ln36_fu_214_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state1))) begin
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_ce0 = 1'b1;
    end else begin
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b0 == Input_1_TVALID) & (icmp_ln36_fu_214_p2 == 1'd0))) & (icmp_ln36_fu_214_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln_fu_288_p4 == 3'd0))) begin
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_we0 = 1'b1;
    end else begin
        coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln46_fu_270_p2 = (tmp_s_fu_248_p3 + zext_ln46_fu_266_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start_int == 1'b0) | ((1'b0 == Input_1_TVALID) & (icmp_ln36_fu_214_p2 == 1'd0)));
end

always @ (*) begin
    ap_condition_224 = (~((ap_start_int == 1'b0) | ((1'b0 == Input_1_TVALID) & (icmp_ln36_fu_214_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state1));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_1_address0 = zext_ln46_1_fu_276_p1;

assign coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_1_d0 = {{Input_1_TDATA[23:16]}};

assign coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_2_address0 = zext_ln46_1_fu_276_p1;

assign coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_2_d0 = {{Input_1_TDATA[23:16]}};

assign coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_3_address0 = zext_ln46_1_fu_276_p1;

assign coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_3_d0 = {{Input_1_TDATA[23:16]}};

assign coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_4_address0 = zext_ln46_1_fu_276_p1;

assign coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_4_d0 = {{Input_1_TDATA[23:16]}};

assign coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_5_address0 = zext_ln46_1_fu_276_p1;

assign coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_5_d0 = {{Input_1_TDATA[23:16]}};

assign coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_6_address0 = zext_ln46_1_fu_276_p1;

assign coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_6_d0 = {{Input_1_TDATA[23:16]}};

assign coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_7_address0 = zext_ln46_1_fu_276_p1;

assign coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_7_d0 = {{Input_1_TDATA[23:16]}};

assign coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_address0 = zext_ln46_1_fu_276_p1;

assign coloringFB_bot_m_stream_ap_uint_32_0_stream_ap_uint_128_0_frame_buffer_d0 = {{Input_1_TDATA[23:16]}};

assign i_V_3_fu_220_p2 = (ap_sig_allocacmp_i_V + 16'd1);

assign icmp_ln36_fu_214_p2 = ((ap_sig_allocacmp_i_V == tmp_V_cast) ? 1'b1 : 1'b0);

assign lshr_ln_fu_256_p4 = {{Input_1_TDATA[15:11]}};

assign tmp_s_fu_248_p3 = {{trunc_ln46_fu_244_p1}, {4'd0}};

assign trunc_ln46_fu_244_p1 = Input_1_TDATA[7:0];

assign trunc_ln_fu_288_p4 = {{Input_1_TDATA[10:8]}};

assign zext_ln46_1_fu_276_p1 = add_ln46_fu_270_p2;

assign zext_ln46_fu_266_p1 = lshr_ln_fu_256_p4;

endmodule //coloringFB_bot_m_coloringFB_bot_m_Pipeline_COLORING_FB
